plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.mdm_ycnt"
        minSdk 26
        targetSdk 31
        versionCode 9
        versionName "1.0.9-beta202405221502" //-beta

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.all { variant ->

        variant.resValue "string", "versionName", variant.versionName

        def formattedDate = new Date().format('yyyyMMddHHmm')
        def flavorName = "${variant.flavorName}"

        def buildName = variant.buildType.name
        def fileName

        if(buildName === "release"){

            def versionName = variant.versionName
            def versionCode = variant.versionCode

            //fileName = "${formattedDate}_HELLO_Android_${flavorName}_${buildName}_v${versionName}(${versionCode}).apk"

            // 检查是否签名配置被禁用
            if (variant.signingConfig == null) {
                // 未签名的 release APK
                fileName = "iMDS_${versionName}_${formattedDate}_unsigned.apk"
            } else {
                // 签名的 release APK
                fileName = "iMDS_${versionName}_${formattedDate}.apk"
            }

//            fileName = "iMDS_${versionName}_${formattedDate}.apk"

        }else{
            fileName = "app-debug.apk"
        }

        variant.outputs.all {
            outputFileName = fileName
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            aidl {
                srcDirs 'src\\main\\aidl', 'src\\main\\aidl\\2'
            }
        }
    }
}

String SDK_DIR = System.getenv("ANDROID_SDK_HOME")
//("TAG", "SDK_DIR = "   SDK_DIR );
if(SDK_DIR == null) {
    Properties props = new Properties()
    props.load(new FileInputStream(project.rootProject.file("local.properties")))
    SDK_DIR = props.get('sdk.dir');
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    //implementation 'androidx.navigation:navigation-fragment:2.3.5'
    //implementation 'androidx.navigation:navigation-ui:2.3.5'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    //coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    compileOnly files("${SDK_DIR}/platforms/android-25/data/layoutlib.jar")

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.12.0'

    implementation project(':floatingWindow')

}